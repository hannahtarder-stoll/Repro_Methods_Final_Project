install.packages('plyr')
install.packages('reshape')
install.packages('ggplots2')
install.packages('ggplot2')
install.packages('tidyverse')
install.packages('tidyverse')
install.packages('binhf')
install.packages('gridExtra')
packrat::snapshot()
install.packages('BH')
install.packages('plogr')
packrat::snapshot()
install.packages('progress')
packrat::snapshot()
getwd
getwd()
wd()
#set working directory
#baseDir<-"~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/data/"
baseDir<-getwd()
print(baseDir)
setwd(baseDir)
#get a list of subject folders
setwd(paste0(baseDir,'data/subs'))
#get a list of subject folders
setwd(paste0(baseDir,'/data/subs'))
#set working directory
#baseDir<-"~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/data/"
baseDir<-getwd()
print(baseDir)
setwd(baseDir)
#get a list of subject folders
setwd(paste0(baseDir,'/data/subs'))
#set working directory
#baseDir<-"~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/"
baseDir<-getwd()
print(baseDir)
#set working directory
baseDir<-"~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/"
baseDir<-getwd()
print(baseDir)
getwd()
setwd("~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/")
baseDir<-getwd()
print(baseDir)
#set working directory
#baseDir<-"~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/"
baseDir<-getwd()
print(baseDir)
setwd(baseDir)
#get a list of subject folders
setwd(paste0(baseDir,'/data/subs'))
getwd()
subs<-list.files()
#loop through and read in data
for (s in subs){
setwd(paste0(baseDir,'/subs/',s))
Pred_Files<-list.files(pattern=c("Prediction"))
if(s==subs[1]){
pred_data<-read.csv(Pred_Files)
}
else{
temp<-read.csv(Pred_Files)
pred_data<-rbind(pred_data, temp)
}
}
baseDir
#set working directory
#baseDir<-"~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/"
baseDir<-getwd()
print(baseDir)
#set working directory
baseDir<-"~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/"
baseDir<-getwd()
print(baseDir)
#set working directory
setwd("~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/")
baseDir<-getwd()
print(baseDir)
setwd(baseDir)
#get a list of subject folders
setwd(paste0(baseDir,'/data/subs'))
subs<-list.files()
#loop through and read in data
for (s in subs){
setwd(paste0(baseDir,'/data/subs/',s))
Pred_Files<-list.files(pattern=c("Prediction"))
if(s==subs[1]){
pred_data<-read.csv(Pred_Files)
}
else{
temp<-read.csv(Pred_Files)
pred_data<-rbind(pred_data, temp)
}
}
#rename columns
colnames(pred_data)[30:32]<- c("resp","acc","rt")
#set working directory
baseDir<-"~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/"
baseDir<-getwd()
print(baseDir)
#set working directory
setwd("~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/")
baseDir<-getwd()
print(baseDir)
getwd()
#set working directory
setwd("~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/")
########################################
############ TEMP INTEGRATION ##########
########################################
getwd()
baseDir
getwd()
setwd("~/Repreop_Methods_Project/")
setwd("Repro_Methods_Project/")
baseDir
#set working directory
setwd("~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/")
baseDir<-"~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/"
baseDir<-getwd()
print(baseDir)
setwd(baseDir)
#get a list of subject folders
setwd(paste0(baseDir,'/data/subs'))
subs<-list.files()
#loop through and read in data
for (s in subs){
setwd(paste0(baseDir,'/data/subs/',s))
Pred_Files<-list.files(pattern=c("Prediction"))
if(s==subs[1]){
pred_data<-read.csv(Pred_Files)
}
else{
temp<-read.csv(Pred_Files)
pred_data<-rbind(pred_data, temp)
}
}
baseDir
#get a list of subject folders
#baseDir<-"~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/data/"
setwd(paste0(baseDir,'/data/subs'))
subs<-list.files()
print(subs)
#loop through and read in data
for (s in subs){
print(s)
setwd(paste0(baseDir,'/data/subs/',s))
Int_Files<-list.files(pattern=c("Integration"))
if(s==subs[1]){
int_data<-read.csv(Int_Files)
}
else{
temp<-read.csv(Int_Files)
int_data<-rbind(int_data, temp)
}
}
getwd()
#what to do with working directories?? can this just stay commented?
setwd("~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/")
baseDir
#setwd back to the main directory
baseDir<-getwd()
setwd(baseDir)
baseDir
#set working directory
setwd("~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/")
baseDir<-"~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/"
baseDir<-getwd()
print(baseDir)
setwd(baseDir)
#get a list of subject folders
setwd(paste0(baseDir,'/data/subs'))
subs<-list.files()
#loop through and read in data
for (s in subs){
setwd(paste0(baseDir,'/data/subs/',s))
Pred_Files<-list.files(pattern=c("Prediction"))
if(s==subs[1]){
pred_data<-read.csv(Pred_Files)
}
else{
temp<-read.csv(Pred_Files)
pred_data<-rbind(pred_data, temp)
}
}
#get a list of subject folders
setwd(paste0(baseDir,'/data/subs'))
subs<-list.files()
print(subs)
#loop through and read in data
for (s in subs){
print(s)
setwd(paste0(baseDir,'/data/subs/',s))
Int_Files<-list.files(pattern=c("Integration"))
if(s==subs[1]){
int_data<-read.csv(Int_Files)
}
else{
temp<-read.csv(Int_Files)
int_data<-rbind(int_data, temp)
}
}
colnames(int_data)[23:25]<- c("resp","acc","rt")
#overall acc
acc_int<-cast(int_data, participant~., mean, value="acc", na.rm=T)
colnames(acc_int)[colnames(acc_int)=="(all)"] <- "mean_acc"
#what to do with working directories?? can this just stay commented?
#setwd("~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/")
source("pred_nav_analysis.R")
#what to do with working directories?? can this just stay commented?
setwd("~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/")
source("pred_nav_analysis.R")
#what to do with working directories?? can this just stay commented?
setwd("~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/")
source("pred_nav_analysis.R")
source("pred_nav_analysis.R")
#what to do with working directories?? can this just stay commented?
setwd("~/Desktop/Repro_Methods_Final_Pipeline/Repro_Methods_Project/")
source("pred_nav_analysis.R")
#load packages
library(shiny)
